<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oauth">
	<select id="findTokenByClientId" resultType="kr.ejsoft.oauth2.server.model.OAuthAccessToken">
		<![CDATA[
		SELECT
		    token_id, token, authentication_id, username, client_id, authentication, refresh_token
		FROM
		    oauth_access_token
		WHERE
		    client_id = #{clientId}
		]]>
	</select>
	
	<select id="findTokenByClientIdAndUsername" resultType="kr.ejsoft.oauth2.server.model.OAuthAccessToken">
		<![CDATA[
		SELECT
		    token_id, token, authentication_id, username, client_id, authentication, refresh_token
		FROM
		    oauth_access_token
		WHERE
		    client_id = #{clientId}
		    AND username = #{username}
		]]>
	</select>
	
	<select id="findTokenByTokenId" resultType="kr.ejsoft.oauth2.server.model.OAuthAccessToken">
		<![CDATA[
		SELECT
		    token_id, token, authentication_id, username, client_id, authentication, refresh_token
		FROM
		    oauth_access_token
		WHERE
		    token_id = #{tokenId}
		]]>
	</select>
	
	<select id="findTokenByRefreshToken" resultType="kr.ejsoft.oauth2.server.model.OAuthAccessToken">
		<![CDATA[
		SELECT
		    token_id, token, authentication_id, username, client_id, authentication, refresh_token
		FROM
		    oauth_access_token
		WHERE
		    refresh_token = #{refresToken}
		]]>
	</select>
	
	<select id="findTokenByAuthenticationId" resultType="kr.ejsoft.oauth2.server.model.OAuthAccessToken">
		<![CDATA[
		SELECT
		    token_id, token, authentication_id, username, client_id, authentication, refresh_token
		FROM
		    oauth_access_token
		WHERE
		    authentication_id = #{authenticationId}
		]]>
	</select>
	
	<insert id="saveAccessToken" keyProperty="token_id">
		insert into oauth_access_token
		    (token_id, token, authentication_id, username, client_id, authentication, refresh_token)
		values
		    (#{tokenId}, #{token}, #{authenticationId}, #{username}, #{clientId}, #{authentication}, #{refreshToken})
	</insert>

	<delete id="deleteAccessToken">
		delete from oauth_access_token where token_id = #{tokenId}
	</delete>
	<select id="findRefreshTokenByTokenId" resultType="kr.ejsoft.oauth2.server.model.OAuthRefreshToken">
		<![CDATA[
		SELECT
		    *
		FROM
		    oauth_refresh_token
		WHERE
		    token_id = #{tokenId}
		]]>
	</select>
	
	<insert id="saveRefreshToken" keyProperty="token_id">
		insert into oauth_refresh_token
		    (token_id, token, authentication)
		values
		    (#{tokenId}, #{token}, #{authentication})
	</insert>


	<delete id="deleteRefreshToken">
		delete from oauth_refresh_token where token_id = #{tokenId}
	</delete>
	



	<select id="findAuthenticationByCode" resultType="kr.ejsoft.oauth2.server.model.OAuthCode">
		<![CDATA[
		select code, authentication from oauth_code where code = #{code}
		]]>
	</select>
	
	<insert id="saveCode" keyProperty="token_id">
		insert into oauth_code (code, authentication) values (#{code}, #{authentication})
	</insert>
	
	<delete id="deleteCode">
		delete from oauth_code where code = #{code}
	</delete>
	
	
	
	
	<select id="findByUserIdAndClientId" resultType="kr.ejsoft.oauth2.server.model.OAuthApproval">
		<![CDATA[
		SELECT
		    expiresAt, status, lastModifiedAt, userId, clientId, scope
		FROM
		    oauth_approvals
		WHERE 1=1
		  AND userId = #{userId}
		  AND clientId = #{clientId}
		]]>
	</select>
	
	<insert id="saveApproval" keyProperty="token_id">
		insert into oauth_approvals
		    (expiresAt, status, lastModifiedAt, userId, clientId, scope)
		values
		    (#{expiresAt, javaType=java.sql.Timestamp, jdbcType=TIMESTAMP},
		     #{status},
		     #{lastModifiedAt, javaType=java.sql.Timestamp, jdbcType=TIMESTAMP},
		     #{userId},
		     #{clientId},
		     #{scope})
	</insert>
	
	<update id="refreshApproval">
		UPDATE oauth_approvals
		   SET expiresAt=#{expiresAt, javaType=java.sql.Timestamp, jdbcType=TIMESTAMP},
		       status=#{status},
		       lastModifiedAt=#{lastModifiedAt, javaType=java.sql.Timestamp, jdbcType=TIMESTAMP}
		 WHERE 1=1
		   AND userId = #{userId}
		   AND clientId = #{clientId}
		   AND scope = #{scope}
	</update>

	<update id="expireApproval">
		UPDATE oauth_approvals
		   SET expiresAt = #{expiresAt}
		 WHERE 1=1
		   AND userId = #{userId}
		   AND clientId = #{clientId}
		   AND scope = #{scope}
	</update>
	
	<delete id="deleteApproval">
		DELETE FROM oauth_approvals
		WHERE 1=1
		  AND userId = #{userId}
		  AND clientId = #{clientId}
		  AND scope = #{scope}
	</delete>
	
</mapper>
